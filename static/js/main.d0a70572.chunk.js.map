{"version":3,"sources":["components/contactForm/ContactForm.module.css","components/filter/Filter.module.css","components/section/Section.js","components/contactForm/ContactForm.js","components/contactsList/ContactList.js","components/filter/Filter.js","App.js","components/hooks/useLocalStorage.js","index.js","components/contactsList/ContactList.module.css"],"names":["module","exports","Section","title","children","ContactForm","contacts","onSubmit","useState","name","setName","number","setNumber","handleInputChange","event","currentTarget","value","reset","className","s","form","preventDefault","find","contact","toLowerCase","alert","type","onChange","pattern","required","ContactList","onDeleteContact","map","id","btn","onClick","Filter","input","App","key","defaultValue","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","useLocalStorage","setContacts","filter","setFilter","visibleContacts","includes","newUserData","shortid","generate","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0a70572.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3zO0L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__3gaj0\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => {\n  return (\n    <div>\n      <section>\n        {title && <h1>{title}</h1>}\n        {children}\n      </section>\n    </div>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactForm.module.css';\n\nfunction ContactForm({ contacts, onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleInputChange = event => {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const revisionContact = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n    if (revisionContact) {\n      alert(`${name} is already in contacts`);\n      reset();\n      return;\n    }\n    onSubmit(name, number);\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleInputChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleInputChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <button type=\"submit\">Add contacts</button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  number: PropTypes.number,\n  name: PropTypes.string,\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <>\n      <h2>Contacts</h2>\n      <ul className={s.contacts}>\n        {contacts.map(({ id, name, number }) => (\n          <li key={id}>\n            <span>{name}:</span> <span>{number}</span>\n            <button className={s.btn} type=\"button\" onClick={() => onDeleteContact(id)}>\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default ContactList;\n\nContactList.propTypes = {\n  contacts: PropTypes.array,\n  onDeleteContacts: PropTypes.func,\n};\n","import React from 'react';\nimport s from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label>\n      Filter contacts by name{' '}\n      <input className={s.input} type=\"text\" value={value} onChange={onChange} />\n    </label>\n  );\n};\n\nexport default Filter;\n","import React, { useState } from 'react';\nimport shortid from 'shortid';\nimport Section from './components/section/Section';\nimport ContactForm from './components/contactForm/ContactForm';\nimport ContactList from './components/contactsList/ContactList';\nimport Filter from './components/filter/Filter';\nimport useLocalStorage from './components/hooks/useLocalStorage';\n\nfunction App() {\n  const [contacts, setContacts] = useLocalStorage('contacts', [\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  ]);\n  const [filter, setFilter] = useState('');\n\n  const addNewContact = (name, number) => {\n    const newUserData = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    setContacts([newUserData, ...contacts]);\n  };\n\n  const removeContact = id => {\n    setContacts(contacts.filter(contact => contact.id !== id));\n  };\n\n  const filterContacts = event => {\n    setFilter(event.currentTarget.value);\n  };\n\n  const getVisibleContacts = () => {\n    return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\n  };\n\n  const visibleContacts = getVisibleContacts();\n  return (\n    <>\n      <Section title=\"Phonebook\">\n        <ContactForm onSubmit={addNewContact} contacts={contacts} />\n        <Filter value={filter} onChange={filterContacts} />\n        <ContactList contacts={visibleContacts} onDeleteContact={removeContact} />\n      </Section>\n    </>\n  );\n}\n\nexport default App;\n","import { useState, useEffect } from 'react';\n\nexport default function useLocalStorage(key, defaultValue) {\n  const [state, setState] = useState(() => {\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n\n  return [state, setState];\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__3MIK-\",\"filter\":\"ContactList_filter__op4XB\",\"btn\":\"ContactList_btn__241eX\"};"],"sourceRoot":""}